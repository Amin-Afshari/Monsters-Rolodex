{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-field/search-box.ccomponent.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","value","handleChange","onChange","type","App","useState","search","state","setState","useEffect","fetch","then","response","json","users","prevState","filteredMonsters","filter","toLowerCase","includes","event","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAYeA,EATF,SAAAC,GAAK,OACd,sBAAKC,UAAY,iBAAjB,UACI,qBAAKC,IAAI,UAAUC,IAAG,gCAA2BH,EAAMI,QAAQC,GAAzC,6BACtB,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCKXC,G,MAPE,SAAAR,GAAK,OAClB,qBAAKC,UAAW,YAAhB,SACCD,EAAMS,SAASC,KAAI,SAACN,GAAD,OAChB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,W,MCSZM,MAdf,YAAyD,IAApCC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,aAErC,OACA,8BACI,uBACAb,UAAU,SACVc,SAAUD,EACVE,KAAK,SACLJ,YAAaA,EACbC,MAAOA,O,MCuCAI,MA7Cf,WAAiB,IAAD,EAEWC,mBAAS,CAChCT,SAAU,GACVU,OAAO,KAJK,mBAERC,EAFQ,KAEDC,EAFC,KAOdC,qBAAU,WACRC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAIN,GAAS,SAACO,GACvB,kCACKA,GADL,IAEEnB,SAAUkB,aAgBhB,IAAME,EAAmBT,EAAMX,SAASqB,QACtC,SAAA1B,GAAO,OAAIA,EAAQE,KAAKyB,cAAcC,SAASZ,EAAMD,WAGrD,OACA,qBAAKlB,UAAU,MAAf,SACA,yBAAQA,UAAU,aAAlB,UAEA,oBAAIA,UAAU,SAAd,gCACA,cAAC,EAAD,CAAWW,YAAY,kBAAkBC,MAAOO,EAAMD,OAAQL,aAnB9D,SAAuBmB,GAAQ,IACtBpB,EAASoB,EAAMC,OAAfrB,MACPQ,GAAS,SAACO,GACR,OAAO,2BACFA,GADL,IAEET,OAAQN,UAed,cAAC,EAAD,CAAUJ,SAAYoB,UCjCXM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.89f0cc2e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nconst Card = props => (\r\n    <div className = 'card-container'>\r\n        <img alt='monster' src={`https://robohash.org/'${props.monster.id}'?set=set2&size=180x180`} />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n    \r\n);\r\n\r\nexport default Card; ","import React from 'react';\r\nimport Card from '../card/card.component';\r\n\r\nimport './card-list.styles.css';\r\n\r\nconst CardList = props => (\r\n    <div className ='card-list'>\r\n    {props.monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster}></Card>))}\r\n    </div>\r\n);\r\n\r\nexport default CardList;","import React from 'react';\r\nimport './search-box.styles.css'\r\n\r\nfunction SearchBox ({placeholder, value, handleChange}) {\r\n\r\n    return (\r\n    <div>\r\n        <input\r\n        className='search'\r\n        onChange={handleChange}\r\n        type='search'\r\n        placeholder={placeholder}\r\n        value={value}></input>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React , {useState, useEffect} from 'react';\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-field/search-box.ccomponent';\nimport './App.css';\n\n\nfunction App () {\n  \n  const[state, setState] = useState({\n    monsters: [],\n    search:''\n  });\n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => setState((prevState) => {\n      return{\n        ...prevState,\n        monsters: users\n      \n      }\n    }));\n    });\n\n    function handleChange (event) {\n      const {value} = event.target;\n      setState((prevState) => {\n        return {\n          ...prevState,\n          search: value\n        }\n      });   \n  }\n\n  const filteredMonsters = state.monsters.filter(\n    monster => monster.name.toLowerCase().includes(state.search)\n    );\n\n    return (\n    <div className=\"App\">\n    <header className=\"App-header\">\n\n    <h1 className='header'> Monsters Rolodex </h1>\n    <SearchBox placeholder='Serach Monsters' value={state.search} handleChange={handleChange}/>\n    <CardList monsters = {filteredMonsters}></CardList>\n\n    </header>\n  </div>\n  )\n  }\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}